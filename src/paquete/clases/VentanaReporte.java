/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paquete.clases;

/**
 *
 * @author matic
 */

public class VentanaReporte extends javax.swing.JFrame {

    
    private GestionCandidato gestorCandidatos;
    private GestionPartidos gestorPartidos;
    private GestionMesaElectoral gestorMesas;
    private GestionElecciones gestorElecciones;
    private GestionActas gestorActas;
    /**
     * Creates new form VentanaReporte
     */
    public VentanaReporte(GestionCandidato gc, GestionPartidos gp, GestionMesaElectoral gm,
                          GestionElecciones ge, GestionActas ga) {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        this.gestorCandidatos = gc;
        this.gestorPartidos = gp;
        this.gestorMesas = gm;
        this.gestorElecciones = ge;
        this.gestorActas = ga;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaReporte = new javax.swing.JTextArea();
        btnGenerarReporte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Reportes");

        areaReporte.setColumns(20);
        areaReporte.setRows(5);
        jScrollPane1.setViewportView(areaReporte);

        jScrollPane3.setViewportView(jScrollPane1);

        btnGenerarReporte.setText("Generar Reporte");
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(btnGenerarReporte)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(btnGenerarReporte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarReporteActionPerformed
        StringBuilder reporte = new StringBuilder(); // Acumulador de texto

    reporte.append(" REPORTE GENERAL\n\n");

    
    reporte.append(" Candidatos:\n");
    if (gestorCandidatos != null) {
        reporte.append(gestorCandidatos.toString());
    } else {
        reporte.append("No hay datos.\n");
    }

    
    reporte.append("\n Partidos:\n");
    if (gestorPartidos != null) {
        for (int i = 0; i < gestorPartidos.getPuntero(); i++) {
            PartidoPolitico[] partidos = gestorPartidos.getPartidos();
            reporte.append((i + 1) + ". " + partidos[i] + "\n");
        }
    } else {
        reporte.append("No hay datos de partidos.\n");
    }

    
    reporte.append("\n Mesas Electorales:\n");
    if (gestorMesas != null) {
        MesaElectoral[] mesas = gestorMesas.getMesas();
        for (int i = 0; i < gestorMesas.getPuntero(); i++) {
            reporte.append((i + 1) + ". " + mesas[i] + "\n");
        }
    } else {
        reporte.append("No hay datos de mesas electorales.\n");
    }

    
    reporte.append("\n Elecciones:\n");
    if (gestorElecciones != null) {
        reporte.append(gestorElecciones.toString()).append("\n");
    } else {
        reporte.append("No hay datos.\n");
    }


    
    reporte.append("\n Actas Electorales:\n");
    if (gestorActas != null && gestorActas.getCantidad() > 0) {
        for (int i = 0; i < gestorActas.getCantidad(); i++) {
            reporte.append(gestorActas.getActa(i).toString()).append("\n");
        }
    } else {
        reporte.append("No hay datos.\n");
    }


    
    areaReporte.setText(reporte.toString());
    }//GEN-LAST:event_btnGenerarReporteActionPerformed
    
    private void generarReporte() {
        StringBuilder reporte = new StringBuilder();

        reporte.append(" REPORTE GENERAL\n\n");

        reporte.append(" Candidatos:\n");
        if (gestorCandidatos != null) 
        {
            Candidato[] candidato = gestorCandidatos.getCandidatos();
            for (int i = 0; i < gestorCandidatos.getCantidad(); i++) {
                reporte.append(gestorMesas.getMesas()[i]).append("\n");
            }
        } 
        else 
        {
            reporte.append("No hay datos.\n");
        }


        reporte.append("\n Partidos:\n");
        if (gestorPartidos != null) {
            for (int i = 0; i < gestorPartidos.getPuntero(); i++) {
                reporte.append(gestorPartidos.getPartidos()[i]).append("\n");
            }
        } else {
            reporte.append("No hay datos.\n");
        }

        reporte.append("\nðŸ”· Mesas Electorales:\n");
        if (gestorMesas != null) {
            for (int i = 0; i < gestorMesas.getPuntero(); i++) {
                reporte.append(gestorMesas.getMesas()[i]).append("\n");
            }
        } else {
            reporte.append("No hay datos.\n");
        }

        reporte.append("\nðŸ”· Elecciones:\n");
        if (gestorElecciones != null) {
            reporte.append(gestorElecciones.toString()).append("\n");
        } else {
            reporte.append("No hay datos.\n");
        }

        reporte.append("\nðŸ”· Actas Electorales:\n");
        if (gestorActas != null) {
            reporte.append(gestorActas.toString()).append("\n");
        } else {
            reporte.append("No hay datos.\n");
        }

        areaReporte.setText(reporte.toString());
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaReporte;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
